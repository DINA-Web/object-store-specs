paths:
  /v1/object-subtype:
    get:
      summary: List object-subtypes
      operationId: getObjectSubtypes
      description: By passing in query string, user can get available object-subtypes authorised
      parameters:
        - in: query
          name: filter[rsql]
          description: pass an optional search string for looking up the object-subtypes
          schema:
            type: string
        - in: query
          name: sort
          description: optional sort string, can have sort order such as descending denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: object-subtypes satifying the query restrictions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectSubtype'
        '400':
          description: bad input parameter
        '404':
          description: object-subtypes not found
    post:
      summary: Add an object-subtype
      operationId: addObjectSubtype
      description: Add an object-subtype
      responses:
        '201':
          description: object-subtype created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: An object-subtype already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewObjectSubtype'
        description: object-subtype to add
  /v1/object-subtype/{Id}:
    get:
      summary: Get an object-subtype
      description: Return a single object-subtype
      operationId: getObjectSubtypeById
      parameters:
        - name: Id
          in: path
          description: ID of object-subtype to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectSubtype'
        "400":
          description: Invalid ID supplied
        "404":
          description: object-subtype not found
    patch:
      summary: Update an object-subtype
      operationId: updateObjectSubtype
      description: Update an object-subtype
      parameters:
        - name: Id
          in: path
          description: object-subtype id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: object-subtype updated
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectSubtype'
        description: object-subtype to update
    delete:
      summary: Delete an object-subtype
      operationId: deleteObjectSubtype
      description: Delete an object-subtype
      parameters:
        - name: Id
          in: path
          description: object-subtype id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: object-subtype marked as deleted
        '400':
          description: invalid ID supplied
        '404':
          description: object-subtype not found

components:
  schemas:
    ObjectSubtype:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
          allOf:
           - $ref: '#/components/schemas/CommonObjectSubtype'
           
    NewObjectSubtype:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          allOf:
           - $ref: '#/components/schemas/CommonObjectSubtype'
                      
    CommonObjectSubtype:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          enum: [object-subtype]      
          description: The type of the object subtype data being returned.
        attributes:
          description: Schema representing the object subtype associated with each object's
                DcType
          type: object
          required:
            - dcType
            - acSubtype
          properties:
            createdBy:
              type: string      
              readOnly: true
              description: authenticated user who create the metadata
            createdOn:              
              type: string
              format: date-time                            
              readOnly: true
              description: date and time when the metadata was created in ISO format
              example: 1985-04-12T23:20:50.52Z
            dcType:
              enum:
                - IMAGE
                - MOVING_IMAGE
                - SOUND
                - TEXT
                - DATASET
                - UNDETERMINED
              description: Type of object stored. Higher level than mediaType. https://tdwg.github.io/ac/termlist/#dc_type
            acSubType:
              type: string
              description: A string describing the supporting specialized type of the
                    resource's DcType. https://terms.tdwg.org/wiki/Audubon_Core_Term_List#ac:subtype
