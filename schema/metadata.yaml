openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/AAFC/test/1.0.0
info:
  description: Metadata schema
  version: "1.0.0"
  title: Metadata schema
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /v1/metadata:
    get:
      summary: get metadatas
      operationId: getMetadatas
      description: By passing in query string, user can get available metadatas authorised
      parameters:
        - in: query
          name: filter[rsql]
          description: pass an optional search string for looking up the metadatas
          schema:
            type: string
        - in: query
          name: sort
          description: optional sort string, can have sort order such as descending denoted by "-"
          schema:
            type: string
        - in: query
          name: page[offset]
          description: number of records to skip when paging
          schema:
            type: integer
            format: int32
        - in: query
          name: page[limit]
          description: maximum number of records to return when paging
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: metadatas satifying the query restrictions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata'                
        '400':
          description: bad input parameter
        '404':
          description: metadata not found
    post:
      summary: adds a metadata
      operationId: addMetadata
      description: Adds a metadata
      responses:
        '201':
          description: metadata created
        '400':
          description: invalid input, object invalid
        '409':
          description: A metadata already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metadata'
        description: Metadata to add
  /v1/metadata/{Id}:
    get:
      summary: Find metadata by ID
      description: Returns a single metadata
      operationId: getMetadataById
      parameters:
        - name: Id
          in: path
          description: ID of metadata to return
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
        '400':
          description: Invalid ID supplied
        '404':
          description: Metadata not found
    patch:
      summary: update a metadata
      operationId: updateMetadata
      description: update a metadata
      parameters:
        - name: Id
          in: path
          description: metadata id to patch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: metadata updated
        '400':
          description: invalid input, object invalid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metadata'
        description: metadata to add
    delete:
      summary: delete a metadata
      operationId: deleteMetadata
      description: delete a metadata
      parameters:
        - name: Id
          in: path
          description: metadata id to delete
          required: true
          schema:
            type: string
            format: uuid            
      responses:
        '200':
          description: metadata marked as deleted
        '400':
          description: invalid ID supplied
        '404':
          description: metadata not found

components:
  schemas:
    Metadata:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
              description: Identifier of the object as UUID
            type:
              type: string
              description: The type of the object of the data being returned.
            attributes:
              description: Schema representing the metadata associated with objects
              type: object
              required:
                - fileIdentifier
                - bucket
                - dcFormat
                - dcType
                - acDigitizationDate
                - xmpUsageTerms
                - xmpRightsWebStatement
                - dcRights
              properties:
                dcFormat:
                  type: string
                  description: A string describing the technical format of the resource.
                    IANA media type. https://tdwg.github.io/ac/termlist/#dc_format
                dcType:
                  enum:
                    - IMAGE
                    - MOVING_IMAGE
                    - SOUND
                    - TEXT
                    - DATASET
                  description: Type of object stored. Higher level than mediaType. https://tdwg.github.io/ac/termlist/#dc_type
                acSubtype:
                  type: string
                  description: Subtype of object stored. Specialization of dcType. https://terms.tdwg.org/wiki/Audubon_Core_Term_List#ac:subtype
                fileIdentifier:
                  type: string
                  description: Identifier (as UUID) of the file described by the metadata
                bucket:
                  type: string
                  description: Namespace of the file described by the metadata
                acCaption:
                  type: string
                  description: Text to be displayed together with (rather than instead of)
                    a resource that is suitable for captions. https://terms.tdwg.org/wiki/Audubon_Core_Term_List#ac:caption
                acDigitizationDate:
                  type: string
                  description: Date (ISO 8601 Date/Time) the first digital version was created.
                    https://tdwg.github.io/ac/termlist/#ac_digitizationDate
                xmpMetadataDate:
                  type: string
                  description: Point in time (ISO 8601 Date/Time) recording when the last
                    modification to metadata (not necessarily the media object itself) occurred.
                    Automatically set. https://tdwg.github.io/ac/termlist/#xmp_MetadataDate
                originalFilename:
                  type: string
                  description: Name of the file at the source without the folder structure
                fileExtension:
                  type: string
                  description: Extension of the file including the dot (e.g. '.png')
                acHashFunction:
                  type: string
                  description: The cryptographic hash function used to compute the value
                    given in acHashValue. https://tdwg.github.io/ac/termlist/#ac_hashFunction
                acHashValue:
                  type: string
                  description: Hash of the uploaded object. Automaticaly generated on successful
                    file upload. https://tdwg.github.io/ac/termlist/#ac_hashValue
                xmpUsageTerms:
                  type: string
                  description: Text instructions on how a resource can be legally used.
                    https://tdwg.github.io/ac/termlist/#xmpRights_UsageTerms
                xmpRightsWebStatement:
                  type: string
                  description: A URL defining or further elaborating on the license statement.
                    https://tdwg.github.io/ac/termlist/#xmpRights_WebStatement
                dcRights:
                  type: string
                  description: Information about rights held in and over the resource. https://tdwg.github.io/ac/termlist/#dc_rights
                xmpRightsOwner:
                  type: string
                  description: Owner(s) of the copyright. https://terms.tdwg.org/wiki/Audubon_Core_Term_List#xmpRights:Owner
                publiclyReleasable:
                  type: boolean
                  description: Can the object representented by the metadata be released
                    publicly? An object that is released publicly retains its license and
                    copyright
                notPubliclyReleasableReason:
                  type: string
                  description: Text explaining why an object cannot be released publicly
                createdDate:
                  type: string
                  description: Point in time (ISO 8601 Date/Time) recording when the metadata
                    entry was created
                deletedDate:
                  type: string
                  description: Point in time (ISO 8601 Date/Time) recording when the metadata
                    entry was deleted. If empty or null, the metadata is considered not
                    deleted
                managedAttributes:
                  type: array
                  items:
                    type: object
                    description: List of key/value pairs of managed attributes.
                acTags:
                  type: array
                  items:
                    type: string
                    description: List of key(tag). Similar to https://tdwg.github.io/ac/termlist/#ac_tag
            relationships:
              properties:
                dcCreator:
                  type: object
                  required:
                    - data
                  properties:                     
                    data:
                      type: object
                      required:
                        - id
                        - type
                      properties:
                        id:
                          type: string
                          description: The id of the dcCreator.
                        type:
                          allOf: [
                            $ref: 'https://raw.githubusercontent.com/xuemeigan/agent-specs/support_19138_Create_OpenAPI3_spec_for_Agent_module/schema/agent.yaml',
                            description: The type of the dcCreator object]
                acMetadataCreator:                
                  type: object
                  required:
                    - data
                  properties:                     
                    data:
                      type: object
                      required:
                        - id
                        - type
                      properties:
                        id:
                          type: string
                          description: The id of the acMetadataCreator.
                        type:
                          allOf: [
                            $ref: 'https://raw.githubusercontent.com/xuemeigan/agent-specs/support_19138_Create_OpenAPI3_spec_for_Agent_module/schema/agent.yaml',
                            description: The type of the acMetadataCreator object]                                 
                acDerivedFrom:
                  type: object
                  required:
                    - data
                  properties:                     
                    data:
                      type: object
                      required:
                        - id
                        - type
                      properties:
                        id:
                          type: string
                          description: The id of the metadata from which the object represented
                            by this metadata is derived from.
                        type:
                          allOf: [
                            $ref: '#/components/schemas/Metadata',
                            description: The type of the acDerivedFrom object. https://tdwg.github.io/ac/termlist/#ac_derivedFrom ]                       

              